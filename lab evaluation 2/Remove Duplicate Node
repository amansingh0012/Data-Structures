#include <stdio.h>
#include <stdlib.h>
typedef struct Node{
    int data;
    struct Node* next;
}Node;
void removeDuplicates( Node* head) {
    Node *current, *temp, *prev;
    current = head;

    while (current != NULL && current->next != NULL) {
        prev = current;
        temp = current->next;

        while (temp != NULL) {
            if (current->data == temp->data) {
                prev->next = temp->next;
                free(temp);
                temp = prev->next;
            } else {
                prev = temp;
                temp = temp->next;
            }
        }
        current = current->next;
    }
}
void insert( Node** head, int data) {
    Node* newNode = (Node*)malloc(sizeof(Node));
    newNode->data = data;
    newNode->next = NULL;

    if (*head == NULL) {
        *head = newNode;
        return;
    }

    Node* temp = *head;
    while (temp->next != NULL)
        temp = temp->next;
    temp->next = newNode;
}
void printList(Node* head) {
    while (head != NULL) {
        printf("%d -> ", head->data);
        head = head->next;
    }
    printf("NULL\n");
}
int main() {
    Node* head = NULL;
    
    insert(&head, 10);
    insert(&head, 20);
    insert(&head, 10);
    insert(&head, 30);
    insert(&head, 20);
    insert(&head, 40);
    
    printf("Original List: \n");
    printList(head);

    removeDuplicates(head);

    printf("List after removing duplicates: \n");
    printList(head);

    return 0;
}
